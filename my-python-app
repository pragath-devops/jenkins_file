pipeline {
    agent any

    environment {
        // Define environment variables if needed
        APP_NAME = 'my-python-app'
        VENV_DIR = '.venv'  // Directory to store virtual environment
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                git 'https://github.com/your-repo/my-python-app.git'
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                script {
                    // Create and activate a virtual environment
                    sh 'python3 -m venv ${VENV_DIR}'
                    sh '. ${VENV_DIR}/bin/activate'  // Linux/Mac
                    // For Windows, use: sh '.\\${VENV_DIR}\\Scripts\\activate'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Install Python dependencies from requirements.txt
                    sh '. ${VENV_DIR}/bin/activate && pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run tests using pytest
                    sh '. ${VENV_DIR}/bin/activate && pytest --maxfail=1 --disable-warnings -q'
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application to the target environment
                script {
                    // Example deployment step (customize as needed)
                    echo "Deploying ${APP_NAME}..."
                    // For example, uploading to a server or container
                    // sh 'scp my-python-app.tar user@staging-server:/path/to/deploy'
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after the build
            cleanWs()
        }
        success {
            // Notify team or log success
            echo 'Build and deployment succeeded!'
        }
        failure {
            // Notify team or log failure
            echo 'Build failed. Please check the logs.'
        }
    }
}
